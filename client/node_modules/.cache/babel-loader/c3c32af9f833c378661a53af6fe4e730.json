{"ast":null,"code":"var _jsxFileName = \"/Users/adityaverma/Desktop/Websites/catfit/src/components/landingPage/Pricing/Pricing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Carousel from 'react-multi-carousel';\nimport SectionHeader from '../SectionHeader';\nimport { data as pricingData } from './pricing.data';\nimport PricingCard from './PricingCard';\nimport \"react-multi-carousel/lib/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1024\n    },\n    items: 3,\n    draggable: false\n  },\n  tablet: {\n    breakpoint: {\n      max: 1023,\n      min: 640\n    },\n    items: 2,\n    draggable: true\n  },\n  mobile: {\n    breakpoint: {\n      max: 639,\n      min: 0\n    },\n    items: 1,\n    draggable: true\n  }\n};\nconst sliderParams = {\n  additionalTransfrom: 0,\n  arrows: false,\n  autoPlaySpeed: 3000,\n  centerMode: false,\n  className: '',\n  slidesToSlide: 1,\n  items: 3,\n  containerClass: 'carousel-container',\n  // customButtonGroup: <ButtonGroup />,\n  dotListClass: '',\n  focusOnSelect: false,\n  infinite: false,\n  keyBoardControl: false,\n  itemClass: '',\n  minimumTouchDrag: 80,\n  renderButtonGroupOutside: true,\n  renderDotsOutside: false,\n  responsive: responsive,\n  showDots: false,\n  sliderClass: ''\n};\n\nconst Pricing = () => {\n  _s();\n\n  const {\n    monthly,\n    annual\n  } = pricingData;\n  const [state, setState] = useState({\n    active: 'monthly',\n    princingPlan: monthly\n  });\n\n  const handlePricingPlan = plan => {\n    if (plan === 'annual') {\n      setState({\n        active: 'annual',\n        princingPlan: annual\n      });\n    } else {\n      setState({\n        active: 'monthly',\n        princingPlan: monthly\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pricing\",\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      heading: \"Pricing Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pricing__buttonGroup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pricing__buttonGroup__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"Monthly\",\n          onClick: () => handlePricingPlan('monthly'),\n          className: state.active === 'monthly' ? 'active' : '',\n          children: \"Monthly Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"Annual\",\n          onClick: () => handlePricingPlan('annual'),\n          className: state.active === 'annual' ? 'active' : '',\n          children: \"Annual Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pricing__pricingWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, { ...sliderParams,\n        children: state.princingPlan.map(packageData => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pricing__pricingWrapper__pricingItem\",\n          children: /*#__PURE__*/_jsxDEV(PricingCard, {\n            packageData: packageData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, packageData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pricing, \"hp0xnPTgV6lM6Oo5D9a/9Uc5F7s=\");\n\n_c = Pricing;\nexport default Pricing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pricing\");","map":{"version":3,"sources":["/Users/adityaverma/Desktop/Websites/catfit/src/components/landingPage/Pricing/Pricing.js"],"names":["React","useState","Carousel","SectionHeader","data","pricingData","PricingCard","responsive","desktop","breakpoint","max","min","items","draggable","tablet","mobile","sliderParams","additionalTransfrom","arrows","autoPlaySpeed","centerMode","className","slidesToSlide","containerClass","dotListClass","focusOnSelect","infinite","keyBoardControl","itemClass","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","showDots","sliderClass","Pricing","monthly","annual","state","setState","active","princingPlan","handlePricingPlan","plan","map","packageData","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Carousel from 'react-multi-carousel';\nimport SectionHeader from '../SectionHeader'\n\nimport { data as pricingData} from './pricing.data'\nimport PricingCard from './PricingCard';\n\nimport \"react-multi-carousel/lib/styles.css\";\n\n\nconst responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3,\n      draggable: false,\n    },\n    tablet: {\n      breakpoint: { max: 1023, min: 640 },\n      items: 2,\n      draggable: true,\n    },\n    mobile: {\n      breakpoint: { max: 639, min: 0 },\n      items: 1,\n      draggable: true,\n    },\n  };\n\nconst sliderParams = {\n    additionalTransfrom: 0,\n    arrows: false,\n    autoPlaySpeed: 3000,\n    centerMode: false,\n    className: '',\n    slidesToSlide: 1,\n    items: 3,\n    containerClass: 'carousel-container',\n    // customButtonGroup: <ButtonGroup />,\n    dotListClass: '',\n    focusOnSelect: false,\n    infinite: false,\n    keyBoardControl: false,\n    itemClass: '',\n    minimumTouchDrag: 80,\n    renderButtonGroupOutside: true,\n    renderDotsOutside: false,\n    responsive: responsive,\n    showDots: false,\n    sliderClass: '',\n  };\n\nconst Pricing = () => {\n    const { monthly, annual } = pricingData\n\n    const[state, setState] = useState({\n        active: 'monthly',\n        princingPlan: monthly\n    })\n\n    const handlePricingPlan = (plan) => {\n        if(plan === 'annual') {\n            setState({ active: 'annual', princingPlan: annual })\n        } else {\n            setState({ active: 'monthly', princingPlan: monthly })\n        }\n    }\n\n    return (\n        <div className='container pricing'>\n            <SectionHeader heading='Pricing Plan' />\n            <div className='pricing__buttonGroup'>\n                <div className='pricing__buttonGroup__inner'>\n                    <button\n                        type='button'\n                        aria-label='Monthly'\n                        onClick={() => handlePricingPlan('monthly')}\n                        className={state.active === 'monthly' ? 'active' : ''}\n                    >\n                        Monthly Plan\n                    </button>\n                    <button\n                        type='button'\n                        aria-label='Annual'\n                        onClick={() => handlePricingPlan('annual')}\n                        className={state.active === 'annual' ? 'active' : ''}\n                    >\n                        Annual Plan\n                    </button>\n                </div>\n            </div>\n            <div className='pricing__pricingWrapper'>\n                <Carousel {...sliderParams}>\n                    {state.princingPlan.map((packageData) => (\n                        <div \n                            key={packageData.id} \n                            className='pricing__pricingWrapper__pricingItem'\n                        >\n                            <PricingCard packageData={packageData} />\n                        </div>\n                    ))}\n                </Carousel>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Pricing\n"]},"metadata":{},"sourceType":"module"}